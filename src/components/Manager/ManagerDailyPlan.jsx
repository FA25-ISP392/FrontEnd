import { useEffect, useState } from "react";
import {
  listDailyPlans,
  updateDailyPlan,
  deleteDailyPlan,
} from "../../lib/apiDailyPlan";

export default function ManagerDailyPlan() {
  const [plans, setPlans] = useState([]);

  // ‚úÖ L·∫•y ng√†y hi·ªán t·∫°i theo gi·ªù Vi·ªát Nam
  const today = new Date().toLocaleDateString("en-CA", {
    timeZone: "Asia/Ho_Chi_Minh",
  });

  // üß© Load danh s√°ch k·∫ø ho·∫°ch ch·ªù duy·ªát
  useEffect(() => {
    (async () => {
      const data = await listDailyPlans();
      setPlans(data.filter((p) => p.planDate === today && !p.status));
    })();
  }, [today]);

  // üü¢ Duy·ªát m√≥n
  const handleApprove = async (plan) => {
    try {
      await updateDailyPlan(plan.planId, { status: true });
      alert(`ƒê√£ duy·ªát "${plan.itemName}"`);
      setPlans((prev) => prev.filter((p) => p.planId !== plan.planId));
    } catch (err) {
      console.error("‚ùå L·ªói duy·ªát:", err);
      alert("Kh√¥ng th·ªÉ duy·ªát m√≥n n√†y!");
    }
  };

  // üî¥ T·ª´ ch·ªëi m√≥n (v√† xo√°)
  const handleReject = async (plan) => {
    if (!window.confirm(`T·ª´ ch·ªëi "${plan.itemName}"?`)) return;
    try {
      await deleteDailyPlan(plan.planId);
      alert(`ƒê√£ t·ª´ ch·ªëi v√† xo√° "${plan.itemName}"`);
      setPlans((prev) => prev.filter((p) => p.planId !== plan.planId));
    } catch (err) {
      console.error("‚ùå L·ªói t·ª´ ch·ªëi:", err);
      alert("Kh√¥ng th·ªÉ xo√° k·∫ø ho·∫°ch!");
    }
  };

  return (
    <div className="p-6">
      <h2 className="text-xl font-bold mb-4 text-neutral-900">
        Y√™u C·∫ßu K·∫ø Ho·∫°ch Trong Ng√†y
      </h2>

      {/* Danh s√°ch k·∫ø ho·∫°ch */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {plans.map((p) => (
          <div
            key={p.planId}
            className="bg-white p-4 rounded-xl shadow border hover:shadow-md transition-all"
          >
            <h4 className="font-semibold mb-1">{p.itemName}</h4>
            <p className="text-sm text-gray-600 mb-3">
              S·ªë l∆∞·ª£ng: {p.plannedQuantity}
            </p>
            <div className="flex gap-2 justify-between">
              <button
                onClick={() => handleApprove(p)}
                className="bg-green-500 hover:bg-green-600 text-white px-3 py-1 rounded"
              >
                Duy·ªát
              </button>
              <button
                onClick={() => handleReject(p)}
                className="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded"
              >
                T·ª´ ch·ªëi
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}
